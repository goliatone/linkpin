<div class="reveal" id="form-modal" data-reveal>
    <div class="row medium-8 large-12 columns">
        <div class="large-12 columns">
            <h5>We bet you&rsquo;ll need a form somewhere:</h5>
        </div>
        <form id="submit-form" action="/link/create" method="POST">
            <div class="large-12 columns">
                <label>URL</label>
                <input name='url' type="text" placeholder="url" />
            </div>
            <div class="large-12 columns">
                <label>Title</label>
                <input name="title" type="text" placeholder="Title" />
            </div>
            <div class="large-12 columns">
                <label>Tags</label>
                <input name="tags" type="text" placeholder="Tags" />
            </div>
            <div class="large-12 columns">
                <label>Description</label>
                <textarea name="description" placeholder="Description"></textarea>
            </div>
            <div class="large-12 columns">
                <a id="submit" href="#" class="button">Submit</a>
            </div>
            <input type="hidden" name="owner" value="1">
        </form>
    </div>
  <button class="close-button" data-close aria-label="Close modal" type="button">
    <span aria-hidden="true">&times;</span>
  </button>
</div>

<div class="row medium-8 large-7 columns">
<% links.forEach(function(link){%>
    <div class="callout secondary clearfix">
        <h5><a href="<%= link.url%>"  target="_blank"><%= link.title %></a></h5>
        <a href="/site/link/<%= link.id %>" class="tiny button float-right">Edit</a>
        <p><%= link.description %></p>
        <% link.tags.forEach(function(tag){%>
            <span class="label secondary"><a href="/site/tag/<%=tag.label%>"><%= tag.label %></a></span>
        <% })%>
    </div>
<% })%>
</div>

<% include ../_pagination.ejs %>

<script type"text/javascript" src="/js/dependencies/sails.io.js"></script>
<script type"text/javascript">
// The automatically-created socket is exposed as io.socket.
// Use .on() to subscribe to the 'user' event on the client.
// This event is sent by the Sails "create", "update",
// "delete", "add" and "remove" blueprints to any socket that
// is subscribed to one or more User model instances.
io.socket.on('link', function gotHelloMessage (data) {
  console.log('User alert!', data);
});
// Using .get('/user') will retrieve a list of current User models,
// subscribe this socket to those models, AND subscribe this socket
// to notifications about new User models when they are created.
io.socket.get('/link', function gotResponse(body, response) {
  console.log('Current users: ', body);
})
</script>
